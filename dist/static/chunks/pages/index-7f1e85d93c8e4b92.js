(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{3196:function(e){function n(e){var n=Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}n.keys=function(){return[]},n.resolve=n,n.id=3196,e.exports=n},8312:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return t(2603)}])},2603:function(e,n,t){"use strict";t.a(e,async function(e,s){try{t.r(n),t.d(n,{default:function(){return N}});var a=t(5893),r=t(9034),o=t.n(r),i=t(4800),l=t(7800),c=t(5518),d=t(399),h=t(3250),u=t(8119),p=t(335),m=t(3731),x=t(6641),g=t(1090),_=t(669),b=t(4644),v=t(7294),j=e([b]);function C(e){return e.startsWith("html")?e.slice(4):e.startsWith("css")?e.slice(3):e.startsWith("js")?e.slice(2):e}function y(){let e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",n="";for(let t=0;t<8;t++)n+=e.charAt(Math.floor(Math.random()*e.length));return n}b=(j.then?(await j)():j)[0];let T=(0,a.jsx)("p",{children:"Asking ChatGPT..."});function w(e){return(0,a.jsx)("div",{className:e.isFullscreen?o().graphCodeDivFullscreen:o().graphCodeDiv,children:e.isCodeView?(0,a.jsxs)("div",{className:o().codeView,children:[(0,a.jsx)("button",{className:o().iconButton2,onClick:()=>{navigator.clipboard.writeText(e.gptResponse.code),alert("Copied to clipboard!")},children:(0,a.jsx)(i.Z,{size:"18px"})}),e.isFullscreen&&(0,a.jsx)("button",{className:o().iconButton3,onClick:()=>{var n;null===(n=e.closeFullscreen)||void 0===n||n.call(e)},children:(0,a.jsx)(l.Z,{})}),e.gptResponse.code]}):e.gptResponse.graph})}function f(e){let[n,t]=(0,v.useState)(!1),[s,r]=(0,v.useState)(!1);return(0,a.jsxs)("div",{className:o().wholeResponse,children:[(0,a.jsxs)("div",{className:o().graphRowAbove,children:[(0,a.jsx)("p",{className:o().graphHeaderText,children:e.gptResponse.query}),(0,a.jsxs)("div",{className:o().graphRowButtons,children:[(0,a.jsx)("button",{className:o().iconButton,onClick:()=>t(e=>!e),children:n?(0,a.jsx)(c.Z,{size:"18px"}):(0,a.jsx)(d.Z,{size:"18px"})}),(0,a.jsx)("button",{className:o().iconButton,onClick:()=>{confirm("Are you sure you want to delete this graph?")&&e.deleteGraph()},children:(0,a.jsx)(h.Z,{size:"18px"})}),s?(0,a.jsx)("button",{className:o().iconButton,onClick:()=>r(!1),children:(0,a.jsx)(u.Z,{size:"18px"})}):(0,a.jsx)("button",{className:o().iconButton,onClick:()=>r(!0),children:(0,a.jsx)(p.Z,{size:"18px"})})]})]}),!s&&(0,a.jsx)(w,{gptResponse:e.gptResponse,isCodeView:n,isFullscreen:!1}),(0,a.jsx)(g.Z,{open:s,onClose:()=>r(!1),sx:{display:"flex",justifyContent:"center",alignItems:"center",overflow:"scroll"},children:(0,a.jsx)(w,{gptResponse:e.gptResponse,isCodeView:n,isFullscreen:!0,closeFullscreen:()=>r(!1)})}),(0,a.jsx)("hr",{className:o().hrBtwn})]})}function N(){let e=new b.yR({accessToken:"TO_SET",apiReverseProxyUrl:"https://api.pawan.krd/backend-api/conversation"}),[n,t]=(0,v.useState)([]),[s,r]=(0,v.useState)({type:"none",elem:void 0}),{width:i,height:l}=function(){let[e,n]=(0,v.useState)({width:void 0,height:void 0});return(0,v.useEffect)(()=>{function e(){n({width:window.innerWidth,height:window.innerHeight})}return window.addEventListener("resize",e),e(),()=>window.removeEventListener("resize",e)},[]),e}(),[c,d]=(0,v.useState)(!1);return!c&&i&&i<=650?(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:o().smallWidthWarning,children:[(0,a.jsx)("h4",{children:"StatGPT is best viewed on desktop / wider screens"}),(0,a.jsx)("button",{onClick:()=>d(!0),children:"Proceeed anyway"})]})}):(0,a.jsx)(a.Fragment,{children:(0,a.jsxs)("div",{className:o().main,children:[(0,a.jsxs)("div",{className:o().responses,children:[(0,a.jsx)("div",{className:o().welcome,children:(0,a.jsx)("p",{children:"StatGPT is a ChatGPT wrapper that creates ChartJS charts from a prompt. Created by @jbuzzy00."})}),(0,a.jsx)("hr",{className:o().hr}),n.map((e,s)=>(0,a.jsx)(f,{gptResponse:e,deleteGraph:()=>{t(n.filter(n=>n!==e))}},s))]}),s.elem&&(0,a.jsx)("div",{className:o().center,children:(0,a.jsx)("div",{className:o().status,children:s.elem})}),(0,a.jsx)("div",{children:(0,a.jsx)("form",{className:o().input,onSubmit:function(o){if("loading"===s.type)return;r({type:"loading",elem:T}),o.preventDefault();let i=o.target.elements.text.value;e.sendMessage("Generate sample data on ".concat(i,". Use this data to generate a complete HTML document that uses chartJS to render the graph. Please output ONLY this HTML file and nothing else. I only want the HTML code block! Delay calling `new Chart` by 500ms, and be sure to give the chart a unique enough id to not conflict with other charts on the page.")).then(e=>{var s;console.log(e.text);let o=C((function(e){let n=function(e){let n=e.match(/```[\s\S]*?```/g);return n?n.map(e=>e.slice(3,-3)):[e]}(e),t="err";for(let e of n)e.length>t.length&&(t=e);return t})(e.text).replaceAll("myChart",y()));console.log(o);let l=(0,a.jsx)(_.Z,{html:o});r({type:"none",elem:void 0}),s={query:i,graph:l,code:e.text},t([...n,s])}).catch(e=>{var n,t;console.log(e),r({elem:(0,a.jsx)("div",{children:(0,a.jsxs)("p",{children:["An error occurred: ",null!==(t=null===(n=e.toString)||void 0===n?void 0:n.call(e))&&void 0!==t?t:String(e)]})}),type:"error"})})},children:(0,a.jsxs)("label",{className:o().inputLabel,children:[(0,a.jsx)("p",{children:"What would you like to visualize?"}),(0,a.jsxs)("div",{className:o().inputText,children:[(0,a.jsx)("input",{className:o().inputTextText,type:"text",name:"text"}),(0,a.jsx)("button",{type:"submit",className:o().iconButton,children:(0,a.jsx)(m.Z,{size:"18px"})}),(0,a.jsx)("button",{className:o().iconButton,onClick:function(){var e;let s=.5>Math.random(),r=s?"html\n<!DOCTYPE html>\n<html>\n<head>\n	<title>Births per Year in the 2010s</title>\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n	<div style=\"width: 600px; height: 400px\">\n		<canvas id=\"myChart\"></canvas>\n	</div>\n\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n	<script>\n    setTimeout(function () {\n      // Define chart data and options\n      var chartData = {\n        labels: ['2010', '2011', '2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'],\n        datasets: [{\n          label: 'Births per Year in the 2010s',\n          data: [3944160, 3951590, 3955874, 3978553, 3996850, 3978493, 3953590, 3909585, 3859958, 3793792],\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 2\n        }]\n      };\n  \n      var chartOptions = {\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              callback: function(value, index, values) {\n                return value.toLocaleString();\n              }\n            }\n          }]\n        },\n        tooltips: {\n          callbacks: {\n            label: function(tooltipItem, data) {\n              return data.datasets[tooltipItem.datasetIndex].label + ': ' + tooltipItem.yLabel.toLocaleString();\n            }\n          }\n        }\n      };\n  \n      // Create chart using Chart.js\n      var ctx = document.getElementById('myChart').getContext('2d');\n      var chart = new Chart(ctx, {\n        type: 'line',\n        data: chartData,\n        options: chartOptions\n      });  \n    }, 100);\n	</script>\n</body>\n</html>":'html\n<!DOCTYPE html>\n<html>\n  <head>\n    <title>Car Sales by Brand in 2018</title>\n    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>\n  </head>\n  <body>\n    <canvas id="myChart"></canvas>\n    <script>\n      setTimeout(() => {\n        const ctx = document.getElementById("myChart");\n        const myChart = new Chart(ctx, {\n          type: "bar",\n          data: {\n            labels: ["Toyota", "Ford", "Honda", "Chevrolet", "Nissan"],\n            datasets: [\n              {\n                label: "Car Sales by Brand in 2018",\n                data: [1000000, 800000, 600000, 500000, 400000],\n                backgroundColor: [\n                  "rgba(255, 99, 132, 0.2)",\n                  "rgba(54, 162, 235, 0.2)",\n                  "rgba(255, 206, 86, 0.2)",\n                  "rgba(75, 192, 192, 0.2)",\n                  "rgba(153, 102, 255, 0.2)",\n                ],\n                borderColor: [\n                  "rgba(255, 99, 132, 1)",\n                  "rgba(54, 162, 235, 1)",\n                  "rgba(255, 206, 86, 1)",\n                  "rgba(75, 192, 192, 1)",\n                  "rgba(153, 102, 255, 1)",\n                ],\n                borderWidth: 1,\n              },\n            ],\n          },\n          options: {\n            scales: {\n              yAxes: [\n                {\n                  ticks: {\n                    beginAtZero: true,\n                  },\n                },\n              ],\n            },\n          },\n        });\n      }, 500);\n    </script>\n  </body>\n</html>\n';e={query:s?"births per year 2010s":"most common car brands in 2018",graph:(0,a.jsx)(_.Z,{html:C(r.replaceAll("myChart",y()))}),code:r},t([...n,e])},type:"button",children:(0,a.jsx)(x.Z,{size:"18px"})})]})]})})})]})})}s()}catch(e){s(e)}})},9034:function(e){e.exports={main:"Home_main__nLjiQ",responses:"Home_responses__liekZ",smallWidthWarning:"Home_smallWidthWarning__klchY",center:"Home_center__4BFgC",status:"Home_status__xVxv7",input:"Home_input__ZarWZ",inputLabel:"Home_inputLabel__lCEa1",inputText:"Home_inputText__ir7ab",inputTextText:"Home_inputTextText__Yj_or",iconButton:"Home_iconButton__z6n_q",iconButton2:"Home_iconButton2__2TOgW",iconButton3:"Home_iconButton3__FErOi",hr:"Home_hr__WSCcI",hrBtwn:"Home_hrBtwn__HaTdj",graphRowAbove:"Home_graphRowAbove__CoDne",codeView:"Home_codeView__9lhN6",graphCodeDiv:"Home_graphCodeDiv__zLaQr",graphCodeDivFullscreen:"Home_graphCodeDivFullscreen__bMpx_",graphHeaderText:"Home_graphHeaderText__pExy3",welcome:"Home_welcome__FfAPx"}}},function(e){e.O(0,[426,774,888,179],function(){return e(e.s=8312)}),_N_E=e.O()}]);